# tmux configuration

# Reset prefix key to Ctrl-s
unbind C-b
set-option -g prefix C-s
bind-key -r C-s send-prefix

# Shortcut to reload source file
bind-key r source-file ~/.tmux.conf \; display-message "Config reloaded."

# use vim keybindings in copy mode
setw -g mode-keys vi

# For copy and paste to work
set-option -g default-command "reattach-to-user-namespace -l bash"

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# make mouse work for latest tmux version 2.1k
set -g mouse on

# This options is for older version of tmux < 2.1
#set-option -g mouse-select-pane on
#set-option -g mouse-select-window on
#set-window-option -g mode-mouse on

set-option -g pane-border-fg black
set-option -g pane-active-border-fg blue

# allow treminal scrolling
set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'

# More colours!!
set-option -g default-terminal "screen-256color"

# Make tmux navigation to follow Vim navigation.
# Smart pane switching with awareness of vim splits
# # See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Pane resizing
bind-key -n M-h resize-pane -L 1
bind-key -n M-l resize-pane -R 1
bind-key -n M-j resize-pane -D 1
bind-key -n M-k resize-pane -U 1

# Rebind pane spliting
bind-key | split-window -h -c '#{pane_current_path}'
bind-key - split-window -v -c '#{pane_current_path}'

# start with pane 1
set -g base-index 1
set -g pane-base-index 1

# Break pane to new window
bind b break-pane -d

# Option to choose session
bind-key o choose-tree

# Status bar
set-option -g status-position top
set-option -g status-bg '#666666'
set-option -g status-fg '#aaaaaa'
setw -g window-status-format "#I:#W"
setw -g window-status-current-format "#[fg=green]^#I:#[fg=green][#W] "
set-option -g status-keys 'emacs'

# Info on left
set-option -g status-left-length 60
set-option -g status-left "#S:"

# Info on right
set -g status-right-length 60
set -g status-right " p:#P #(battery -t) #(date '+%a %b%d %I:%M') "

# Session switching
bind-key y split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Break out into a different session
bind-key C-b send-keys 'tat && exit' 'C-m'

# Kill session
bind-key C-k run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"
