" vimrc files from @jibone
" http://jshamsul.com

" Use Vim settings, and not Vi settings. Must be as early as posible,
" It has side effects.
set nocompatible

" map the leader key
let mapleader = ","

" basic settings
set backspace=2     " Make backspace work like most other programs

set nobackup
set nowritebackup
set noswapfile      " Remove the need for a swap file, (.swp)

set history=50
set ruler           " Show the cursor positon all the time
set showcmd         " Show incomplete commands
set incsearch       " Do incremental searching
set laststatus=2    " Always display the status line
set autowrite       " Automatically :write before running commands
set nohls
set nowrap
set autoindent
set smartindent

set number
set numberwidth=5
set relativenumber

" pathogen
execute pathogen#infect()

" Switch syntax highlighting on.
" Also switch on highlightinh the last used search pattern.
if (&t_Co > 2 || has("gui_running")) && !exists("syntax_on")
  syntax on
endif

" Turn on file type detection
filetype on
filetype indent on
filetype plugin on

augroup vimrcEx
  autocmd!

  " When editing a file, always jump to the last known cursor position.
  " Don't do it for commit messages, when the position is invalid, or when
  " inside an event handler (happens when dropping a file on gvim).
  autocmd BufReadPost *
    \ if &ft != 'gitcommit' && line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal g`\"" |
    \ endif

  " Syntax kighlighting for specific file types
  autocmd BufRead, BufNewFile *.md set filetype=markdown
  autocmd BufNewFile, BufRead *.ejs set filetype=html

augroup END

" Softtabs, 2 spaces
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab

" textmate like set invisibles.
" ctrl-v u25b8 for ▸ and ctrl-v u00ac for ¬
set listchars=tab:▸\ ,eol:¬
set list

" folding settings
set foldmethod=indent
set foldnestmax=10
set nofoldenable
set foldlevel=1
set foldcolumn=0

" Change the default mapping and default command to invoke CtrlP
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'

" Use The Silver Searcher https://github.com/ggreer/the_silver_searcher
if executable('ag')
  " Use Ag over Grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

" Highlight extra white space with annoying red
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red

" Set the colorscheme
set background=dark
colorscheme Tomorrow-Night
highlight NonText guibg=#060606
highlight Folded  guibg=#0A0A0A guifg=#9090D0

match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

" I sometime work on a project with 120 is the colum width,
" and most of the time I prefer the 80 column width.
" This function toggles the columwidth highlighting.
function! ColumnWidthToggle()
  if(&textwidth == 120)
    set textwidth=80
  else
    set textwidth=120
  endif
endfunc
set textwidth=80
set colorcolumn=+1

nnoremap <leader>c :call ColumnWidthToggle()<cr>

" Toggle between relative line numbering and normal line numbering
function! LineNumToggle()
  if(&relativenumber == 1)
    set norelativenumber
  else
    set relativenumber
  endif
endfunc

nnoremap <leader>l :call LineNumToggle()<cr>

" Switch between the last two files
nnoremap <leader><leader> <c-^>

" Turn of arrow keys. force use h,j,k,l
nnoremap <Left> :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up> :echoe "Use k"<CR>
nnoremap <Down> :echoe "Use j"<CR>

" provide hjkl movements in Insert mode via the <Alt> modifier key
inoremap <A-h> <C-o>h
inoremap <A-j> <C-o>j
inoremap <A-k> <C-o>k
inoremap <A-l> <C-o>l

" Treat <li> and <p> tags like the block tags they are
let g:html_indent_tags = 'li\|p'

" Open new split panes to right and bottom, which feels more natural
set splitbelow
set splitright

" Quicker window movement
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

" Settings for gui vim, in my case, MacVim
if has("gui_running")
  " Remove tool bar from GUI
  set guioptions=-t
  set clipboard=unnamed
  colorscheme Tomorrow-Night
  set guifont=Monaco:h11
endif

nmap <F8> :TagbarToggle<CR>
